# vim: ft=make
# makecmdgoals framework: shared library linking
# copyright (c) 2018 Mikhail Usenko <michaelus@tochka.ru>


# don't try to rebuild this makefile
[link1-so.makecmdgoals] := $(lastword $(MAKEFILE_LIST))
$([link1-so.makecmdgoals]):: ;


include $(join $(dir $([link1-so.makecmdgoals])),framework.defs)
$(call !trace!,$$(\)[$$($${})],[link1-so.makecmdgoals])


ifeq ($({TARGET_OS}),WINDOWS) #(1)


override $(call !D!,LDFLAGS) += -mdll
LDOUT ?= $(call !BUILD-PATHNAME!,$@.dll)


else #(1)


override $(call !D!,LDFLAGS) += -shared

ifdef $(call !D!,LDOUT) #(2)

# if LDOUT is defined by the user, then it is considered as some special output name,
# and so use special SONAME
ifneq ($({SONAME}),)
override $(call !D!,LDFLAGS) += -Wl,-soname=$({SONAME})
endif

else #(2)

{LINKNAME} = $(call !patsubst-filename!,%,lib%.so,$@))
ifneq ($({SONAME}),) #(3)
LDOUT = $(call !BUILD-PATHNAME!,$({LINKNAME}))
override $(call !D!,LDFLAGS) += -Wl,-soname=$({SONAME})
else #(3)
ifneq ($({SONAME_VERSION}),)
  ifneq ($({SOFILE_VERSION}),)
    LDOUT = $(call !BUILD-PATHNAME!,$({LINKNAME})).$({SONAME_VERSION}).$({SOFILE_VERSION})
  else
    LDOUT = $(call !BUILD-PATHNAME!,$({LINKNAME}))
  endif
  override $(call !D!,LDFLAGS) += -Wl,-soname=$(notdir $({LINKNAME})).$({SONAME_VERSION})
else
  LDOUT = $(call !BUILD-PATHNAME!,$({LINKNAME}))
endif
endif #(3)

endif #(2)


endif #(1)


include $(join $(dir $([link1-so.makecmdgoals])),link1.makecmdgoals)

