# vim: ft=make
# makecmdgoals framework: object linking
# copyright (c) 2018 Mikhail Usenko <michaelus@tochka.ru>


# don't try to rebuild this makefile
[link.makecmdgoals] := $(lastword $(MAKEFILE_LIST))
$([link.makecmdgoals]):: ;


# use common definitions
include $(join $(dir $([link.makecmdgoals])),framework.defs)
$(call !trace!,$$(\)[$$($${})],[link.makecmdgoals])


# no default goal
# (define it with recursively expanded assignment from any empty variable)
.DEFAULT_GOAL = $@
.PHONY: $(MAKECMDGOALS)


{LD_COMMAND} = $({CXX_COMMAND}) $({LDFLAGS})


$(call !trace!,$${}={$$($${})},{LDEXTRAS} {LDLIBS})

ifneq ($({LDSHARED}),)
{LDSHAREDLIBS} = -Wl,-Bdynamic $(addprefix -l,$({LDSHARED})) $(if $(filter -static,$({LD_COMMAND}) $({LDEXTRAS}) $({LDLIBS})),-Wl$(,)-Bstatic,-Wl$(,)-Bdynamic)
endif
ifneq ($({LDSTATIC}),)
{LDSTATICLIBS} = -Wl,-Bstatic $(addprefix -l,$({LDSTATIC})) $(if $(filter -static,$({LD_COMMAND}) $({LDEXTRAS}) $({LDLIBS})),-Wl$(,)-Bstatic,-Wl$(,)-Bdynamic)
endif
$(call !trace!,$${}={$$($${})},{LDSHAREDLIBS} {LDSTATICLIBS})


$(call !trace!,$${}={$$($${})},{SOURCES})
#########################################
ifneq ($({SOURCES}),)

$(call !trace!,$${}={$$($${})},{OBJECTS})

{LD_OBJECTS} = $({OBJECTS}) $({LDEXTRAS})

else

{SOURCES} = $(wildcard $(addprefix *,$({CXX_SOURCE_SUFFIXES})))
$(call !trace!,$${}={$$($${})},{SOURCES})

{LD_OBJECTS} = $({SOURCES}) $({LDEXTRAS})

endif


LDOUT ?= $(call !BUILD-PATHNAME!,$@)
$(call !trace!,$${}:={$$(value $${})},LDOUT)


# use secondary expansion to make target-specific and automatic variables
# used in rule prerequisites to be properly expanded
.SECONDEXPANSION:
$(MAKECMDGOALS): $$({LD_OBJECTS}) | $$(dir $$({LDOUT}))
	$(info $(\) *** ($@: $^))
	$({LD_COMMAND}) $(call !quote-words!,',$({LD_OBJECTS}))  $({LDLIBS}) $({LDSHAREDLIBS}) $({LDSTATICLIBS})  -o '$({LDOUT})'


{BUILD_DIRS} = $(sort $(dir $(call !BUILD-PATHNAME!,$(MAKECMDGOALS))) $({CURRENT_BUILD_DIR})/)

$({BUILD_DIRS}):
	mkdir -p '$@'

$(addsuffix %,$({BUILD_DIRS})):
	mkdir -p '$@'

