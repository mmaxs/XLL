# vim: ft=make
# makecmdgoals framework: static library creating
# copyright (c) 2018 Mikhail Usenko <michaelus@tochka.ru>


# don't try to rebuild this makefile
[ar.makecmdgoals] := $(lastword $(MAKEFILE_LIST))
$([ar.makecmdgoals]):: ;


# use common definitions
include $(join $(dir $([ar.makecmdgoals])),framework.defs)
$(call !trace!,$$(\)[$$($${})],[ar.makecmdgoals])


# no default goal
# (define it with recursively expanded assignment from any empty variable)
.DEFAULT_GOAL = $@


{AR_COMMAND} = $({AR}) $({ARFLAGS})

AROUT ?= $(call !BUILD-PATHNAME!,$(call !patsubst-filename!,%,lib%.a,$@))

{AR_MEMBERS} = $({OBJECTS}) $({AREXTRAS})


$(call !trace!,$${}={$$($${})},{AR_MEMBERS})
############################################
ifneq ($(strip $({AR_MEMBERS})),)


# use secondary expansion to make target-specific and automatic variables
# used in rule prerequisites to be properly expanded
.SECONDEXPANSION:
$(MAKECMDGOALS): $$(MAKEFILE_LIST)
$(MAKECMDGOALS): $$({AR_MEMBERS}) | $$(dir $$({AROUT}))
	$(info $(\) *** ($@: $^))
	$({AR_COMMAND}) '$({AROUT})'  $(call !quote-words!,',$({AR_MEMBERS}))


{BUILD_DIRS} = $(sort $(dir $(call !BUILD-PATHNAME!,$(MAKECMDGOALS))) $({CURRENT_BUILD_DIR})/)

$({BUILD_DIRS}):
	mkdir -p '$@'

$(addsuffix %,$({BUILD_DIRS})):
	mkdir -p '$@'


endif

