# vim: ft=make
# makecmdgoals framework: windows resource compiling
# copyright (c) 2018 Mikhail Usenko <michaelus@tochka.ru>


# don't try to rebuild this makefile
[windres.makecmdgoals] := $(lastword $(MAKEFILE_LIST))
$([windres.makecmdgoals]):: ;


# use common definitions
include $(join $(dir $([windres.makecmdgoals])),framework.defs)
$(call !trace!,$$(\)[$$($${})],[windres.makecmdgoals])


# no default goal
# (define it with recursively expanded assignment from any empty variable)
.DEFAULT_GOAL = $@
.PHONY: $(MAKECMDGOALS)


ifeq ($({HOST_OS}),MSYS)
{WINDRES_IFLAGS} = $(subst &,^&,$({IFLAGS}))
else
{WINDRES_IFLAGS} = $(subst &,\&,$({IFLAGS}))
endif
{WINDRES_COMMAND} = $({WINDRES}) \
	--preprocessor "$(subst ",\",$({CPP}) $({CXXRUNFLAGS}) -xc-header -DRC_INVOKED $({CPPFLAGS}) $({WINDRES_IFLAGS}))" \
	--output-format=coff


# (the rule of the target prerequisites) <- ((target file),(source file))
define !TARGET-PREREQUISITES! =
$1 : $2$(if $(call !realpath-failure!,$(dir $1)), | $(dir $1))$(\)
endef


$(call !trace!,$${}={$$($${})},{WINDRES_SOURCES})
#################################################
ifneq ($({WINDRES_SOURCES}),)


$(call !trace!,$${}={$$($${})},{WINDRES_OBJECTS})


{OBJECT_PREREQUISITES} = $(call !map2!,$(\),!TARGET-PREREQUISITES!,$({WINDRES_OBJECTS}),$({WINDRES_SOURCES}))$(\)
$(call !trace!,$${}={$$($${})},{OBJECT_PREREQUISITES})


$(eval $({OBJECT_PREREQUISITES}))


$(sort $(dir $({WINDRES_OBJECTS}))):
	mkdir -p '$@'


$({WINDRES_OBJECTS}): $(MAKEFILE_LIST)
$({WINDRES_OBJECTS}):
	$(info $(\) *** ($@: $^))
	$({WINDRES_COMMAND}) --input='$(filter $({WINDRES_SOURCES}),$^)' --output='$@'


# do compile the object files
{MAKECMDGOALS} = $(filter-out $({WINDRES_OBJECTS}),$(MAKECMDGOALS))
ifneq ($({MAKECMDGOALS}),)
$({MAKECMDGOALS}): $({WINDRES_OBJECTS}) ;
endif


endif

